/* This portion of code is the styling for the second container on the index page, I use margin to make it centred on the page and so that there is enough whitespace around the 
edges of the container, I declare the dimensions of the container using px and vw which is known as view width, I also use flexbox to make the content inside of the box centred.*/
.second-container {
    background-color: ghostwhite;
    margin-top: 2%;
    margin-left:20px;
    margin-right:40px;
    height:700px;
    width:95vw;
    display:-webkit-flex;
    display:flex;
    justify-content: space-evenly;
    padding-left:15px;
}

/* This portion of code  is used to style a second container that holds all of the text on the left hand side of .second-container I float it left so that the slideshow can be on the
right.*/
.info-portion{
    height: 700px;
    width: 570px;
    float:left;
}

/* This portion of code is just used to style the heading inside of the info portion container, I change the font, spacing between the letters, and the margin is used to center
the heading above the text. */
.info-portion h1{
    font-family: 'Antonio', sans-serif;
    letter-spacing: 2.5px;
    margin-left: 50px;
    margin-right: 50px;
}

/* This portion of code is just used style the text that is below the heading, making it so that there is an indent and the beggining of the paragraph and also changing the font.*/
div p {
    font-size: 22;
    text-indent:30px;
    font-family: 'Helvetica', 'Arial', 'sans-serif';
}

/* This portion of code. */
.centerContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    background:url(../images/header.png);
    filter: blur(8px);
    -webkit-filter: blur(8px);
    height:680px;
    width:100vw;
    margin-left:-10px;
    background-size:cover;
    background-repeat: no-repeat;
    min-height: 680px;

/* This portion of code is used to style the text that is in the center of the main container of the screen, I use position absolute to make it be positioned 
relative to the nearest positioned ancestor, I then use top 50%, leaving 50% and transform the style to make the text be centred within the center container. From there I also 
made an animation that increases the width of the text to make it seem that if someone was typing the text on the page, I also make a border on the right side of the text
to simulate as if someone was waiting to type something beside it.*/
}
#centerContainerText{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-65%, -50%);
    background-color: rgba(130, 130, 130, 0.5);
    animation: type 4s steps(22);
    overflow: hidden;
    white-space: nowrap;
    font-family: 'Inconsolata', monospace;
    border-right: 4px solid black;
    padding: 10px;
    padding-left: 25px;
}
/* This portion of code is for the animation that was stated above keyframes controls the intermediate steps in a CSS animation sequence by defining styles for keyframes, 0%
being that none of the text is revealed and 100% being that all of the text is revealed.*/

@keyframes type{
    0% {
        width:0ch;
    }
    100% {
        width:29ch;
    }
}

/* This portion of code is used to change the color of some text that I placed in the middle of a paragraph, I used an id to identify it so that I can easily style it */
#ptec1{
    color:purple;
}

/* This portion of code is used so that when the element with the id of ptec1 is visited from the webpage and it is in the user history the text will turn red so that the user
knows that they visited that link already. */
#ptec1:visited{
    color:red;
}

/* This portion of code is used so that the text in the head above the paragraph text is cenetered, I also include a border on the bottom of the heading so that it looks like
there is a line under the text, finally I make the color of the heading black.*/
#second-head{
    text-align: center;
    border-bottom: 1px solid #000;
    color:black;
}

/* This portion of code is the slideshow that you seen on the right side of the paragraph text, the first thing I do is set the dimensions of the container and then I set that 
background as the first picture of my slideshow sp that there is never a whiteslide, next I declare that the animation will take 30 seconds to cyle through all of the images and
it will go on for an infinite amouint of time while easing in and out of the photos. Next I add some margin on the top and bottom of the slider so that there is some white space 
and it doesn't look crammed. */
.slider{
    width:1000px;
    height: 670px;
    background:url(../images/Image.1.png);
    animation: slide 30s infinite ease-in-out;
    float: right;
    margin-right:15px;
    margin-top:15px;
    -webkit-transition: ease-in-out;
    -moz-transition: ease-in-out;
    -o-transition: ease-in-out;
    transition: ease-in-out;
}

/* This portion of code is used to define what is going to change about the slider container at what percentage of the animation, so if the animation is 30 seconds long then
at 50% we know that the animation would be on image.4. */
@keyframes slide{
    12.5%{
        background:url(../images/Image.1.png);
    }
    25%{
        background:url(../images/image.2.png);
    }
    37.5%{
        background:url(../images/image.3.png);
    }
    50%{
        background:url(../images/image.4.png);
    }
    62.5%{
        background:url(../images/image.5.png);
    }
    75%{
        background:url(../images/image.6.png);
    }
    87.5%{
        background:url(../images/image.7.png);
    }
    100%{
        background:url(../images/image.8.png);
    }
}